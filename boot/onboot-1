#! /bin/sh
PATH=/sbin:/usr/sbin:/bin:/usr/bin

. /lib/init/vars.sh
. /lib/lsb/init-functions

# resize p2 as 16gigs and p3 as the rest
p2_start=`fdisk -l /dev/mmcblk0 | grep mmcblk0p2 | awk '{print $2}'`
log_daemon_msg "Repartitioning /dev/mmcblk0..." &&
  printf "p\nd\n2\nn\np\n2\n$p2_start\n+16G\nn\np\n3\n\n\np\nw" | fdisk /dev/mmcblk0

# resize the / partition
if [ -b /dev/mmcblk0p2 ]; then
  log_daemon_msg "Resizing /..." &&
    resize2fs /dev/mmcblk0p2
fi

# mount /tmp as a tempfs
log_daemon_msg "Mounting /tmp using tempfs..." &&
  echo "tmpfs /tmp tmpfs noatime,nosuid,nodev,noexec,mode=1777,size=512M 0 0" >> /etc/fstab

# rest of sd card
if [ -b /dev/mmcblk0p3 ]; then

  log_daemon_msg "Formatting ext4 on /dev/mmcblk0p3..." &&
    mkfs.ext4 -F /dev/mmcblk0p3

  UUID=`blkid /dev/mmcblk0p3 | awk '{print $2}' | sed 's/"//g'`
  log_daemon_msg "Adding /dev/mmcblk0p3 to fstab..." &&
    mkdir -p /var/local/backups &&
    echo "$UUID /var/local/backups ext4 errors=remount-ro,noatime 0 2" >> /etc/fstab

fi

# primary usb disk
if [ -b /dev/sda ]; then

  # small swap partition as sda1, rest as sda2
  printf "p\ng\nn\n1\n\n+4G\nn\n2\n\n\np\nw" | fdisk /dev/sda

  # make a swap fs on the swap partition
  log_daemon_msg "Formatting swap on /dev/sda1..." &&
    mkswap /dev/sda1

  # create an ext4 filesystem
  log_daemon_msg "Formatting ext4 on /dev/sda2..." &&
    mkfs.ext4 -F /dev/sda2

  # set up as perm fstab entry with low swappiness
  UUID=`blkid /dev/sda1 | awk '{print $2}' | sed 's/"//g'`
  log_daemon_msg "Adding swap to fstab..." &&
    echo 'vm.swappiness = 1' >> /etc/sysctl.conf &&
    echo "$UUID none swap defaults 0 0" >> /etc/fstab &&
    swapon /dev/sda1

  # mount at /var and move existing /var over
  UUID=`blkid /dev/sda2 | awk '{print $2}' | sed 's/"//g'`
  log_daemon_msg "Moving /var to /dev/sda2..." &&
    mv /var /var.old && mkdir /var &&
    echo "$UUID /var ext4 errors=remount-ro,noatime 0 2" >> /etc/fstab &&
    mount /dev/sda2 /var && cp -dpr /var.old/* /var

fi

# move to next stage
mv /media/boot/onboot-2 $0 &&
  sync &&
  reboot
